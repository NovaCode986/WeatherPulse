<<<<<<< HEAD
import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../../../../src/internal/types';
=======
import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';
>>>>>>> 8cbd697f2133b9c8bd6fbc78fe0bc86a3495f0d5
export declare function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;
export declare function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;
export declare function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;
export declare function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;
export declare function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;
export declare function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;
//# sourceMappingURL=takeWhile.d.ts.map